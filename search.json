[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 tidyRename authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aaron Clark. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Clark (2024). tidyRename: Automagically rename wordy variables. R package version 0.0.0.9000.","code":"@Manual{,   title = {tidyRename: Automagically rename wordy variables},   author = {Aaron Clark},   year = {2024},   note = {R package version 0.0.0.9000}, }"},{"path":[]},{"path":"/index.html","id":"purpose","dir":"","previous_headings":"","what":"Purpose","title":"Automagically rename wordy variables","text":"{tidyRename} originally designed automating creation submission compliant variable attributes SAS v5 Transport files (.e. <=8 characters variable names, among things). However, concepts can expanded CSR activities .e., SDTM variables mapping process etc. ensure uniformity among users eliminates wasted time manually creating easily-readable variable names high dimensional data sets. fact, {tidyRename} can useful outside pharma industry well - ’s handy “renamer”. Just give vector strings, tidy meet custom needs. See example use cases !","code":""},{"path":"/index.html","id":"origins","dir":"","previous_headings":"","what":"Origins","title":"Automagically rename wordy variables","text":"Project built contribution {xportr} {pharmaverse}","code":""},{"path":"/index.html","id":"what-are-the-checks","dir":"","previous_headings":"","what":"What are the checks?","title":"Automagically rename wordy variables","text":"interested using {tidyRename} submission compliance regulatory bodies, ’s can expect ’s output:  Variable names must start letter (underscore), comprised uppercase letters (-Z), numerals (0-9) free non-ASCII characters, symbols, underscores. Allotted length column containing character (text) data set maximum length variable used across data sets (≤ 200) Coerces variables numeric character types Display format support numeric float date/time values Variables names ≤ 8 characters. Variable labels ≤ 200 characters. Data set labels ≤ 40 characters. Presence non-ASCII characters Variable Names, Labels data set labels.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Automagically rename wordy variables","text":"can install development version tidyRename GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"aclark02-arcus/tidyRename\")"},{"path":[]},{"path":"/index.html","id":"renaming-strings","dir":"","previous_headings":"Example use cases","what":"Renaming strings","title":"Automagically rename wordy variables","text":"basic example shows solve common problem raw data variable names, manipulated character vector: user can alter final letter case output specifying “upper”, “lower”, “asis” maintain input string case: default, SAS v5 transport files require variable names 8 less characters, {tidyRename} can accept custom character lengths final output: Usually, don’t want number first character variable name. default, numbers relocated end string. However, want keep front, ’s possible! recommend add letter prefix seen : Sometimes ’ll common variable names ’ll always want change standard name. use case, just specify “dictionary data.frame”, seen example:","code":"library(tidyRename)  ## basic example converting  vars <- c(\"\", \"studyid\", \"STUDYID\", \"subject id\", \"1c. ENT\", \"1b. Eyes\",           \"1d. Lungs\", \"1e. Heart\", \"year number\", \"1a. Skin_Desc\")  # Default behavior tidy_rename(vars) #>  #> The following variable name validation checks failed: #> * Must be 8 characters or less: Variables `subject id`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Must start with a letter: Variables `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, and `1a. Skin_Desc`. #> * Cannot contain any non-ASCII, symbol or underscore characters: Variables `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Cannot contain any lowercase characters Variables ``, `studyid`, `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #>  #>  #> ── 10 of 10 (100%) variables were renamed ── #>  #> Var 1:  '' was renamed to 'V1' #> Var 2:  'studyid' was renamed to 'STUDYID' #> Var 3:  'STUDYID' was renamed to 'STUDYID2' #> Var 4:  'subject id' was renamed to 'SUBJECTD' #> Var 5:  '1c. ENT' was renamed to 'ENT1C' #> Var 6:  '1b. Eyes' was renamed to 'EYES1B' #> Var 7:  '1d. Lungs' was renamed to 'LUNGS1D' #> Var 8:  '1e. Heart' was renamed to 'HEART1E' #> Var 9:  'year number' was renamed to 'YEARNUMB' #> Var 10:  '1a. Skin_Desc' was renamed to 'SKNDSC1A' #>  #> All renamed variables passed validation. #>  [1] \"V1\"       \"STUDYID\"  \"STUDYID2\" \"SUBJECTD\" \"ENT1C\"    \"EYES1B\"   #>  [7] \"LUNGS1D\"  \"HEART1E\"  \"YEARNUMB\" \"SKNDSC1A\" # maintain source case tidy_rename(vars, letter_case = \"asis\")  #>  #> The following variable name validation checks failed: #> * Must be 8 characters or less: Variables `subject id`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Must start with a letter: Variables `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, and `1a. Skin_Desc`. #> * Cannot contain any non-ASCII, symbol or underscore characters: Variables `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Cannot contain any lowercase characters Variables ``, `studyid`, `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #>  #> ── 8 of 10 (80%) variables were renamed ── #>  #> Var 1:  '' was renamed to 'V1' #> Var 4:  'subject id' was renamed to 'subjectd' #> Var 5:  '1c. ENT' was renamed to 'ENT1c' #> Var 6:  '1b. Eyes' was renamed to 'Eyes1b' #> Var 7:  '1d. Lungs' was renamed to 'Lungs1d' #> Var 8:  '1e. Heart' was renamed to 'Heart1e' #> Var 9:  'year number' was renamed to 'yearnumb' #> Var 10:  '1a. Skin_Desc' was renamed to 'SknDsc1a' #>  #> The following variable name validation checks still failed: #> Cannot contain any lowercase characters Variables `studyid`, `subjectd`, `ENT1c`, `Eyes1b`, `Lungs1d`, `Heart1e`, `yearnumb`, and `SknDsc1a`. #>  [1] \"V1\"       \"studyid\"  \"STUDYID\"  \"subjectd\" \"ENT1c\"    \"Eyes1b\"   #>  [7] \"Lungs1d\"  \"Heart1e\"  \"yearnumb\" \"SknDsc1a\" # Set Custom character length in output tidy_rename(vars, char_len = 10) #>  #> The following variable name validation checks failed: #> * Must be 8 characters or less: Variables `subject id`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Must start with a letter: Variables `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, and `1a. Skin_Desc`. #> * Cannot contain any non-ASCII, symbol or underscore characters: Variables `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Cannot contain any lowercase characters Variables ``, `studyid`, `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #>  #> ── 10 of 10 (100%) variables were renamed ── #>  #> Var 1:  '' was renamed to 'V1' #> Var 2:  'studyid' was renamed to 'STUDYID' #> Var 3:  'STUDYID' was renamed to 'STUDYID2' #> Var 4:  'subject id' was renamed to 'SUBJECTID' #> Var 5:  '1c. ENT' was renamed to 'ENT1C' #> Var 6:  '1b. Eyes' was renamed to 'EYES1B' #> Var 7:  '1d. Lungs' was renamed to 'LUNGS1D' #> Var 8:  '1e. Heart' was renamed to 'HEART1E' #> Var 9:  'year number' was renamed to 'YEARNUMBER' #> Var 10:  '1a. Skin_Desc' was renamed to 'SKINDESC1A' #>  #> The following variable name validation checks still failed: #> Must be 8 characters or less: Variables `SUBJECTID`, `YEARNUMBER`, and `SKINDESC1A`. #>  [1] \"V1\"         \"STUDYID\"    \"STUDYID2\"   \"SUBJECTID\"  \"ENT1C\"      #>  [6] \"EYES1B\"     \"LUNGS1D\"    \"HEART1E\"    \"YEARNUMBER\" \"SKINDESC1A\" # Leave numerical prefix on left-hand side, but add a starting letter tidy_rename(vars, relo_2_end = FALSE, letter_for_num_prefix = \"q\") #>  #> The following variable name validation checks failed: #> * Must be 8 characters or less: Variables `subject id`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Must start with a letter: Variables `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, and `1a. Skin_Desc`. #> * Cannot contain any non-ASCII, symbol or underscore characters: Variables `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Cannot contain any lowercase characters Variables ``, `studyid`, `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #>  #> ── 10 of 10 (100%) variables were renamed ── #>  #> Var 1:  '' was renamed to 'V1' #> Var 2:  'studyid' was renamed to 'STUDYID' #> Var 3:  'STUDYID' was renamed to 'STUDYID2' #> Var 4:  'subject id' was renamed to 'SUBJECTD' #> Var 5:  '1c. ENT' was renamed to 'Q1CENT' #> Var 6:  '1b. Eyes' was renamed to 'Q1BEYES' #> Var 7:  '1d. Lungs' was renamed to 'Q1DLUNGS' #> Var 8:  '1e. Heart' was renamed to 'Q1EHEART' #> Var 9:  'year number' was renamed to 'YEARNUMB' #> Var 10:  '1a. Skin_Desc' was renamed to 'Q1SKNDSC' #>  #> All renamed variables passed validation. #>  [1] \"V1\"       \"STUDYID\"  \"STUDYID2\" \"SUBJECTD\" \"Q1CENT\"   \"Q1BEYES\"  #>  [7] \"Q1DLUNGS\" \"Q1EHEART\" \"YEARNUMB\" \"Q1SKNDSC\" # Add a dictionary and remove underscores - impacts var 4 tidy_rename(vars, sep = \"\", dict_dat = data.frame(original_varname = \"subject id\", dict_varname = \"subjid\")) #>  #> The following variable name validation checks failed: #> * Must be 8 characters or less: Variables `subject id`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Must start with a letter: Variables `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, and `1a. Skin_Desc`. #> * Cannot contain any non-ASCII, symbol or underscore characters: Variables `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Cannot contain any lowercase characters Variables ``, `studyid`, `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #>  #> ── 10 of 10 (100%) variables were renamed ── #>  #> Var 1:  '' was renamed to 'V1' #> Var 2:  'studyid' was renamed to 'STUDYID' #> Var 3:  'STUDYID' was renamed to 'STUDYID2' #> Var 4:  'subject id' was renamed to 'SUBJID' #> Var 5:  '1c. ENT' was renamed to 'ENT1C' #> Var 6:  '1b. Eyes' was renamed to 'EYES1B' #> Var 7:  '1d. Lungs' was renamed to 'LUNGS1D' #> Var 8:  '1e. Heart' was renamed to 'HEART1E' #> Var 9:  'year number' was renamed to 'YEARNUMB' #> Var 10:  '1a. Skin_Desc' was renamed to 'SKNDSC1A' #>  #> All renamed variables passed validation. #>  [1] \"V1\"       \"STUDYID\"  \"STUDYID2\" \"SUBJID\"   \"ENT1C\"    \"EYES1B\"   #>  [7] \"LUNGS1D\"  \"HEART1E\"  \"YEARNUMB\" \"SKNDSC1A\""},{"path":"/index.html","id":"renaming-data-frame-variable-attributes-directly","dir":"","previous_headings":"Example use cases","what":"Renaming data frame variable attributes directly","title":"Automagically rename wordy variables","text":"basic examples shows use {tidyRename} manipulated data.frame object’s variable attributes directly, returning input data.frame:","code":"vars <- c(\"\", \"STUDYID\", \"studyid\", \"subject id\", \"1c. ENT\", \"1b. Eyes\",       \"1d. Lungs\", \"1e. Heart\", \"year number\", \"1a. Skin_Desc\") adxx <- data.frame(matrix(0, ncol = 10, nrow = 3)) colnames(adxx) <- vars   tidy_varnames(adxx) # default #>  #> The following variable name validation checks failed: #> * Must be 8 characters or less: Variables `subject id`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Must start with a letter: Variables `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, and `1a. Skin_Desc`. #> * Cannot contain any non-ASCII, symbol or underscore characters: Variables `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Cannot contain any lowercase characters Variables ``, `studyid`, `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #>  #> ── 9 of 10 (90%) variables were renamed ── #>  #> Var 1:  '' was renamed to 'V1' #> Var 3:  'studyid' was renamed to 'STUDYID2' #> Var 4:  'subject id' was renamed to 'SUBJECTD' #> Var 5:  '1c. ENT' was renamed to 'ENT1C' #> Var 6:  '1b. Eyes' was renamed to 'EYES1B' #> Var 7:  '1d. Lungs' was renamed to 'LUNGS1D' #> Var 8:  '1e. Heart' was renamed to 'HEART1E' #> Var 9:  'year number' was renamed to 'YEARNUMB' #> Var 10:  '1a. Skin_Desc' was renamed to 'SKNDSC1A' #>  #> All renamed variables passed validation. #>   V1 STUDYID STUDYID2 SUBJECTD ENT1C EYES1B LUNGS1D HEART1E YEARNUMB SKNDSC1A #> 1  0       0        0        0     0      0       0       0        0        0 #> 2  0       0        0        0     0      0       0       0        0        0 #> 3  0       0        0        0     0      0       0       0        0        0  tidy_varnames(adxx, relo_2_end = FALSE, letter_for_num_prefix = \"q\") # prefix numbers on left-hand side #>  #> The following variable name validation checks failed: #> * Must be 8 characters or less: Variables `subject id`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Must start with a letter: Variables `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, and `1a. Skin_Desc`. #> * Cannot contain any non-ASCII, symbol or underscore characters: Variables `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Cannot contain any lowercase characters Variables ``, `studyid`, `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #>  #> ── 9 of 10 (90%) variables were renamed ── #>  #> Var 1:  '' was renamed to 'V1' #> Var 3:  'studyid' was renamed to 'STUDYID2' #> Var 4:  'subject id' was renamed to 'SUBJECTD' #> Var 5:  '1c. ENT' was renamed to 'Q1CENT' #> Var 6:  '1b. Eyes' was renamed to 'Q1BEYES' #> Var 7:  '1d. Lungs' was renamed to 'Q1DLUNGS' #> Var 8:  '1e. Heart' was renamed to 'Q1EHEART' #> Var 9:  'year number' was renamed to 'YEARNUMB' #> Var 10:  '1a. Skin_Desc' was renamed to 'Q1SKNDSC' #>  #> All renamed variables passed validation. #>   V1 STUDYID STUDYID2 SUBJECTD Q1CENT Q1BEYES Q1DLUNGS Q1EHEART YEARNUMB #> 1  0       0        0        0      0       0        0        0        0 #> 2  0       0        0        0      0       0        0        0        0 #> 3  0       0        0        0      0       0        0        0        0 #>   Q1SKNDSC #> 1        0 #> 2        0 #> 3        0  my_dictionary <- data.frame(original_varname = \"subject id\", dict_varname = \"subjid\") tidy_varnames(adxx, dict_dat  = my_dictionary) # 'SUBJID' used #>  #> The following variable name validation checks failed: #> * Must be 8 characters or less: Variables `subject id`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Must start with a letter: Variables `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, and `1a. Skin_Desc`. #> * Cannot contain any non-ASCII, symbol or underscore characters: Variables `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Cannot contain any lowercase characters Variables ``, `studyid`, `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #>  #> ── 9 of 10 (90%) variables were renamed ── #>  #> Var 1:  '' was renamed to 'V1' #> Var 3:  'studyid' was renamed to 'STUDYID2' #> Var 4:  'subject id' was renamed to 'SUBJID' #> Var 5:  '1c. ENT' was renamed to 'ENT1C' #> Var 6:  '1b. Eyes' was renamed to 'EYES1B' #> Var 7:  '1d. Lungs' was renamed to 'LUNGS1D' #> Var 8:  '1e. Heart' was renamed to 'HEART1E' #> Var 9:  'year number' was renamed to 'YEARNUMB' #> Var 10:  '1a. Skin_Desc' was renamed to 'SKNDSC1A' #>  #> All renamed variables passed validation. #>   V1 STUDYID STUDYID2 SUBJID ENT1C EYES1B LUNGS1D HEART1E YEARNUMB SKNDSC1A #> 1  0       0        0      0     0      0       0       0        0        0 #> 2  0       0        0      0     0      0       0       0        0        0 #> 3  0       0        0      0     0      0       0       0        0        0  tidy_varnames(adxx, sep = \"_\") # permissible for legacy studies #>  #> The following variable name validation checks failed: #> * Must be 8 characters or less: Variables `subject id`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Must start with a letter: Variables `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, and `1a. Skin_Desc`. #> * Cannot contain any non-ASCII, symbol or underscore characters: Variables `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Cannot contain any lowercase characters Variables ``, `studyid`, `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #>  #> ── 9 of 10 (90%) variables were renamed ── #>  #> Var 1:  '' was renamed to 'V1' #> Var 3:  'studyid' was renamed to 'STUDYID2' #> Var 4:  'subject id' was renamed to 'SUBJCTID' #> Var 5:  '1c. ENT' was renamed to 'ENT_1C' #> Var 6:  '1b. Eyes' was renamed to 'EYES_1B' #> Var 7:  '1d. Lungs' was renamed to 'LUNGS_1D' #> Var 8:  '1e. Heart' was renamed to 'HEART_1E' #> Var 9:  'year number' was renamed to 'YEARNMBR' #> Var 10:  '1a. Skin_Desc' was renamed to 'SKNDSC1A' #>  #> The following variable name validation checks still failed: #> Cannot contain any non-ASCII, symbol or underscore characters: Variables `ENT_1C`, `EYES_1B`, `LUNGS_1D`, and `HEART_1E`. #> Cannot contain any lowercase characters Variables `ENT_1C`, `EYES_1B`, `LUNGS_1D`, and `HEART_1E`. #>   V1 STUDYID STUDYID2 SUBJCTID ENT_1C EYES_1B LUNGS_1D HEART_1E YEARNMBR #> 1  0       0        0        0      0       0        0        0        0 #> 2  0       0        0        0      0       0        0        0        0 #> 3  0       0        0        0      0       0        0        0        0 #>   SKNDSC1A #> 1        0 #> 2        0 #> 3        0"},{"path":"/reference/tidyRename-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tidyRename: Automagically rename wordy variables — tidyRename-package","title":"tidyRename: Automagically rename wordy variables — tidyRename-package","text":"Reduces automating creation submission compliant variable attributes (.e. <=8 characters variable names, <=40 characters labels). Concepts can expanded CSR activities .e., SDTM variables mapping process etc. ensure uniformity among users eliminates wasted time manually creating easily-readable variable names high dimensional data sets.","code":""},{"path":"/reference/tidyRename-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tidyRename: Automagically rename wordy variables — tidyRename-package","text":"Maintainer: Aaron Clark clark.aaronchris@gmail.com (ORCID)","code":""},{"path":"/reference/tidy_rename.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename terms for submission compliance from vector — tidy_rename","title":"Rename terms for submission compliance from vector — tidy_rename","text":"function takes single character vector input converts string submission compliant. means variable must maximum 8 characters, ASCII , contain uppercase letters, numbers must start letter. symbols special characters included names. However, legacy studies started December 17, 2016 may use underscore character \"_\". function slightly flexible submission criteria allow, use arguments wisely. tidy_varnames performs logic, directly renames columns data.frame plus enforces strict adherence regulatory guidelines mentioned .","code":""},{"path":"/reference/tidy_rename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename terms for submission compliance from vector — tidy_rename","text":"","code":"tidy_rename(   original_varname,   char_len = 8,   relo_2_end = TRUE,   letter_for_num_prefix = \"x\",   sep = \"\",   replace_vec = c(`'` = \"\", `\"` = \"\", `%` = \"_pct_\", `#` = \"_nmbr_\"),   dict_dat = data.frame(original_varname = character(), dict_varname = character()),   letter_case = \"upper\",   case = \"parsed\",   return_df = FALSE,   verbose = getOption(\"xportr.type_verbose\", \"none\") )"},{"path":"/reference/tidy_rename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename terms for submission compliance from vector — tidy_rename","text":"original_varname character vector needing renaming char_len integer, max number characters allowed renamed strings relo_2_end logical, TRUE: numerical prefix bundles relocated end string. prefix bundle determined number \"grouping numbers separated special characters punctuation\". See details section info prefix bundles. letter_for_num_prefix character. ignored relo_2_end = TRUE. Per CDISC & regulatory body requirements, variable names start number, want leave number left-hand side, use argument insert starting letter numeric prefix. sep string one character long, intended separate words one another. general, empty string (\"\") underscore (\"\") possible, user can insert letter desired. Note \"\" discouraged permissible legacy studies started Dec 17, 2016. replace_vec named character vector name replaced value. helpful finding replacing smaller sub-strings embedded variable names automatically converting preferred phrase. example: '%' -> \"pct\". dict_dat data frame containing two variables: original_varname dict_varname used find replace entire variable names new ones. example, \"Subject ID\" -> \"SUBJID\". letter_case character, choices c(\"upper\", \"lower\", \"asis\") allowing user make final renamed terms uppercase (default), lowercase, leave -, respectively. Note, lowercase discourage submission compliant. case character, see to_any_case info alternate cases popular choices \"snake\", \"lower_camel\", \"parsed\" (default). documentation, \"parsed\" case parses substrings surrounds underscore. Underscores start end trimmed. lower upper case pattern input string changed. sep = \"\", underscores trimmed later. return_df logical, defaults TRUE entire dataset returned suggestion process, else just suggestion column ","code":""},{"path":"/reference/tidy_rename.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rename terms for submission compliance from vector — tidy_rename","text":"Abbreviating variable names xportr pkg uses step--step process detailed . original variable name renamed based method performing least amount work achieve min character length requirement (8 chars), thus maintaining maximum originality. Therefore, function moves next method -needed basis; namely, term still greater 8 characters, even lite modification. Blanks: columns missing variable name (.e., header blank source file) renamed 'V' plus column position. 2nd column blank, receive 'V2' rename. Use dictionary controlled terminology: example: 'Subject ID' may better suited 'SUBJID' within organization. Note, dictionary terms expected submission compliant abbreviated. , however, undergo check non-compliance. nothing! least, mimic SAS automatically cleaning variable names PROC IMPORT. Namely, replace special characters & capitalize everything, etc. 'SASified' name <= 8 chars, function use rename. However, still long, function try removing extra special characters spaces help reduce 8 chars. Find STEM ROOT word original variable name. example, original contains word 'resting', 'ing' dropped root word 'rest' considered. less 8 chars, algorithm suggests result. still long, function , , remove special characters spaces stemmed word(s). Apply abbreviation algorithm primary goal readability, results remain unique. methods described bit 'involved', results robust. First, know characters always stripped end strings first (.e. right left). element variable name contains one word (words separated spaces) least one letter word retained. Method: First spaces ends string stripped. (necessary) spaces stripped. Next, lower case vowels removed followed lower case consonants. Finally abbreviation still longer 8 chars, upper case letters symbols stripped. identifying 'words', app performs pre-processing steps following order: Certain symbols replaced. Like '%' symbol replaced 'PCT'. Ex: 'I_Ate_%' becomes 'I_Ate_PCT' Replace symbols blank space. Ex: 'I_Ate' becomes 'Ate' Find two capital letters next , followed lower case letter adds space two capital letters separate assumed 'words'. Ex: 'IAte' becomes 'Ate' Insert space number followed character. Ex: iAte1meal' becomes 'iAte1 meal' Insert space character followed number. Ex: 'iAte1meal' becomes 'iAte 1meal' abbreviate ? stemmed word exists, app apply abbreviation algorithm described stemmed version variable name, else original variable name. Since submission guidelines indicate variables may start number, found, algorithm either add maintain '_' \"prefix bundle\" transformations detailed , relocate \"prefix bundle\" end term (default behavior). term starts non-standard numerical prefix? Currently, function accounts following types prefix bundles, 3 used example starting digit: x = \"3a. hey\" return \"3a\" x = \"3_17a_hey\" return \"3_17a\" x = \"3_17_hey\" return \"3_17\" x = \"3_17hey\" return \"3_17\" x = \"3hey\" return \"3\"","code":""},{"path":[]},{"path":"/reference/tidy_rename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename terms for submission compliance from vector — tidy_rename","text":"","code":"vars <- c(\"\", \"studyid\", \"STUDYID\", \"subject id\", \"1c. ENT\", \"1b. Eyes\",          \"1d. Lungs\", \"1e. Heart\", \"year number\", \"1a. Skin_Desc\")  # Default behavior tidy_rename(vars) #>  #> The following variable name validation checks failed: #> * Must be 8 characters or less: Variables `subject id`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Must start with a letter: Variables `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, and `1a. Skin_Desc`. #> * Cannot contain any non-ASCII, symbol or underscore characters: Variables `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Cannot contain any lowercase characters Variables ``, `studyid`, `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #>  #>  #> ── 10 of 10 (100%) variables were renamed ── #>  #> Var 1:  '' was renamed to 'V1' #> Var 2:  'studyid' was renamed to 'STUDYID' #> Var 3:  'STUDYID' was renamed to 'STUDYID2' #> Var 4:  'subject id' was renamed to 'SUBJECTD' #> Var 5:  '1c. ENT' was renamed to 'ENT1C' #> Var 6:  '1b. Eyes' was renamed to 'EYES1B' #> Var 7:  '1d. Lungs' was renamed to 'LUNGS1D' #> Var 8:  '1e. Heart' was renamed to 'HEART1E' #> Var 9:  'year number' was renamed to 'YEARNUMB' #> Var 10:  '1a. Skin_Desc' was renamed to 'SKNDSC1A' #>  #> All renamed variables passed validation. #>  #>  [1] \"V1\"       \"STUDYID\"  \"STUDYID2\" \"SUBJECTD\" \"ENT1C\"    \"EYES1B\"   #>  [7] \"LUNGS1D\"  \"HEART1E\"  \"YEARNUMB\" \"SKNDSC1A\" tidy_rename(vars, letter_case = \"asis\") #>  #> The following variable name validation checks failed: #> * Must be 8 characters or less: Variables `subject id`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Must start with a letter: Variables `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, and `1a. Skin_Desc`. #> * Cannot contain any non-ASCII, symbol or underscore characters: Variables `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Cannot contain any lowercase characters Variables ``, `studyid`, `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #>  #> ── 8 of 10 (80%) variables were renamed ── #>  #> Var 1:  '' was renamed to 'V1' #> Var 4:  'subject id' was renamed to 'subjectd' #> Var 5:  '1c. ENT' was renamed to 'ENT1c' #> Var 6:  '1b. Eyes' was renamed to 'Eyes1b' #> Var 7:  '1d. Lungs' was renamed to 'Lungs1d' #> Var 8:  '1e. Heart' was renamed to 'Heart1e' #> Var 9:  'year number' was renamed to 'yearnumb' #> Var 10:  '1a. Skin_Desc' was renamed to 'SknDsc1a' #>  #> The following variable name validation checks still failed: #> Cannot contain any lowercase characters Variables `studyid`, `subjectd`, `ENT1c`, `Eyes1b`, `Lungs1d`, `Heart1e`, `yearnumb`, and `SknDsc1a`. #>  [1] \"V1\"       \"studyid\"  \"STUDYID\"  \"subjectd\" \"ENT1c\"    \"Eyes1b\"   #>  [7] \"Lungs1d\"  \"Heart1e\"  \"yearnumb\" \"SknDsc1a\"  # Leave numerical prefix on left-hand side, but add a starting letter tidy_rename(vars, relo_2_end = FALSE, letter_for_num_prefix = \"x\") #>  #> The following variable name validation checks failed: #> * Must be 8 characters or less: Variables `subject id`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Must start with a letter: Variables `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, and `1a. Skin_Desc`. #> * Cannot contain any non-ASCII, symbol or underscore characters: Variables `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Cannot contain any lowercase characters Variables ``, `studyid`, `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #>  #> ── 10 of 10 (100%) variables were renamed ── #>  #> Var 1:  '' was renamed to 'V1' #> Var 2:  'studyid' was renamed to 'STUDYID' #> Var 3:  'STUDYID' was renamed to 'STUDYID2' #> Var 4:  'subject id' was renamed to 'SUBJECTD' #> Var 5:  '1c. ENT' was renamed to 'X1CENT' #> Var 6:  '1b. Eyes' was renamed to 'X1BEYES' #> Var 7:  '1d. Lungs' was renamed to 'X1DLUNGS' #> Var 8:  '1e. Heart' was renamed to 'X1EHEART' #> Var 9:  'year number' was renamed to 'YEARNUMB' #> Var 10:  '1a. Skin_Desc' was renamed to 'X1SKNDSC' #>  #> All renamed variables passed validation. #>  #>  [1] \"V1\"       \"STUDYID\"  \"STUDYID2\" \"SUBJECTD\" \"X1CENT\"   \"X1BEYES\"  #>  [7] \"X1DLUNGS\" \"X1EHEART\" \"YEARNUMB\" \"X1SKNDSC\"  # Add a dictionary and remove underscores tidy_rename(vars, sep = \"\",  dict_dat = data.frame(original_varname = \"subject id\", dict_varname = \"subjid\")) #>  #> The following variable name validation checks failed: #> * Must be 8 characters or less: Variables `subject id`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Must start with a letter: Variables `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, and `1a. Skin_Desc`. #> * Cannot contain any non-ASCII, symbol or underscore characters: Variables `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Cannot contain any lowercase characters Variables ``, `studyid`, `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #>  #> ── 10 of 10 (100%) variables were renamed ── #>  #> Var 1:  '' was renamed to 'V1' #> Var 2:  'studyid' was renamed to 'STUDYID' #> Var 3:  'STUDYID' was renamed to 'STUDYID2' #> Var 4:  'subject id' was renamed to 'SUBJID' #> Var 5:  '1c. ENT' was renamed to 'ENT1C' #> Var 6:  '1b. Eyes' was renamed to 'EYES1B' #> Var 7:  '1d. Lungs' was renamed to 'LUNGS1D' #> Var 8:  '1e. Heart' was renamed to 'HEART1E' #> Var 9:  'year number' was renamed to 'YEARNUMB' #> Var 10:  '1a. Skin_Desc' was renamed to 'SKNDSC1A' #>  #> All renamed variables passed validation. #>  #>  [1] \"V1\"       \"STUDYID\"  \"STUDYID2\" \"SUBJID\"   \"ENT1C\"    \"EYES1B\"   #>  [7] \"LUNGS1D\"  \"HEART1E\"  \"YEARNUMB\" \"SKNDSC1A\""},{"path":"/reference/tidy_varnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename data.frame variables for submission compliance — tidy_varnames","title":"Rename data.frame variables for submission compliance — tidy_varnames","text":"Change variable names .df () return object user. function simply calls tidy_rename colnames(.df). function takes single character vector input converts string submission compliant. means variable must maximum 8 characters, ASCII , contain uppercase letters, numbers must start letter. symbols special characters included names. However, legacy studies started December 17, 2016, may use underscore character \"_\".","code":""},{"path":"/reference/tidy_varnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename data.frame variables for submission compliance — tidy_varnames","text":"","code":"tidy_varnames(   .df,   verbose = getOption(\"xportr.type_verbose\", \"none\"),   relo_2_end = TRUE,   letter_for_num_prefix = \"x\",   sep = \"\",   replace_vec = c(`'` = \"\", `\"` = \"\", `%` = \"_pct_\", `#` = \"_nmbr_\"),   dict_dat = data.frame(original_varname = character(), dict_varname = character()) )"},{"path":"/reference/tidy_varnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename data.frame variables for submission compliance — tidy_varnames","text":".df R object columns can coerced verbose action function takes variable typed properly. Options 'stop', 'warn', 'message', 'none' relo_2_end logical, TRUE: numerical prefix bundles relocated end string. prefix bundle determined number \"grouping numbers separated special characters punctuation\". See details section info prefix bundles. letter_for_num_prefix character. ignored relo_2_end = TRUE. Per CDISC & regulatory body requirements, variable names start number, want leave number left-hand side, use argument insert starting letter numeric prefix. sep string one character long, intended separate words one another. general, empty string (\"\") underscore (\"\") possible, user can insert letter desired. Note \"\" discouraged permissible legacy studies started Dec 17, 2016. replace_vec named character vector name replaced value. helpful finding replacing smaller sub-strings embedded variable names automatically converting preferred phrase. example: '%' -> \"pct\". dict_dat data frame containing two variables: original_varname dict_varname used find replace entire variable names new ones. example, \"Subject ID\" -> \"SUBJID\".","code":""},{"path":"/reference/tidy_varnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename data.frame variables for submission compliance — tidy_varnames","text":"Returns modified table.","code":""},{"path":"/reference/tidy_varnames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rename data.frame variables for submission compliance — tidy_varnames","text":"Abbreviating variable names xportr pkg uses step--step process detailed . original variable name renamed based method performing least amount work achieve min character length requirement (8 chars), thus maintaining maximum originality. Therefore, function moves next method -needed basis; namely, term still greater 8 characters, even lite modification. Blanks: columns missing variable name (.e., header blank source file) renamed 'V' plus column position. 2nd column blank, receive 'V2' rename. Use dictionary controlled terminology: example: 'Subject ID' may better suited 'SUBJID' within organization. Note, dictionary terms expected submission compliant abbreviated. , however, undergo check non-compliance. nothing! least, mimic SAS automatically cleaning variable names PROC IMPORT. Namely, replace special characters & capitalize everything, etc. 'SASified' name <= 8 chars, function use rename. However, still long, function try removing extra special characters spaces help reduce 8 chars. Find STEM ROOT word original variable name. example, original contains word 'resting', 'ing' dropped root word 'rest' considered. less 8 chars, algorithm suggests result. still long, function , , remove special characters spaces stemmed word(s). Apply abbreviation algorithm primary goal readability, results remain unique. methods described bit 'involved', results robust. First, know characters always stripped end strings first (.e. right left). element variable name contains one word (words separated spaces) least one letter word retained. Method: First spaces ends string stripped. (necessary) spaces stripped. Next, lower case vowels removed followed lower case consonants. Finally abbreviation still longer 8 chars, upper case letters symbols stripped. identifying 'words', app performs pre-processing steps following order: Certain symbols replaced. Like '%' symbol replaced 'PCT'. Ex: 'I_Ate_%' becomes 'I_Ate_PCT' Replace symbols blank space. Ex: 'I_Ate' becomes 'Ate' Find two capital letters next , followed lower case letter adds space two capital letters separate assumed 'words'. Ex: 'IAte' becomes 'Ate' Insert space number followed character. Ex: iAte1meal' becomes 'iAte1 meal' Insert space character followed number. Ex: 'iAte1meal' becomes 'iAte 1meal' abbreviate ? stemmed word exists, app apply abbreviation algorithm described stemmed version variable name, else original variable name. Since submission guidelines indicate variables may start number, found, algorithm either add maintain '_' \"prefix bundle\" transformations detailed , relocate \"prefix bundle\" end term (default behavior). term starts non-standard numerical prefix? Currently, function accounts following types prefix bundles, 3 used example starting digit: x = \"3a. hey\" return \"3a\" x = \"3_17a_hey\" return \"3_17a\" x = \"3_17_hey\" return \"3_17\" x = \"3_17hey\" return \"3_17\" x = \"3hey\" return \"3\"","code":""},{"path":[]},{"path":"/reference/tidy_varnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename data.frame variables for submission compliance — tidy_varnames","text":"","code":"vars <- c(\"\", \"STUDYID\", \"studyid\", \"subject id\", \"1c. ENT\", \"1b. Eyes\",      \"1d. Lungs\", \"1e. Heart\", \"year number\", \"1a. Skin_Desc\") adxx <- data.frame(matrix(0, ncol = 10, nrow = 3)) colnames(adxx) <- vars  my_dictionary <- data.frame(original_varname = \"subject id\", dict_varname = \"subjid\")  tidy_varnames(adxx) # default #>  #> The following variable name validation checks failed: #> * Must be 8 characters or less: Variables `subject id`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Must start with a letter: Variables `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, and `1a. Skin_Desc`. #> * Cannot contain any non-ASCII, symbol or underscore characters: Variables `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Cannot contain any lowercase characters Variables ``, `studyid`, `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #>  #> ── 9 of 10 (90%) variables were renamed ── #>  #> Var 1:  '' was renamed to 'V1' #> Var 3:  'studyid' was renamed to 'STUDYID2' #> Var 4:  'subject id' was renamed to 'SUBJECTD' #> Var 5:  '1c. ENT' was renamed to 'ENT1C' #> Var 6:  '1b. Eyes' was renamed to 'EYES1B' #> Var 7:  '1d. Lungs' was renamed to 'LUNGS1D' #> Var 8:  '1e. Heart' was renamed to 'HEART1E' #> Var 9:  'year number' was renamed to 'YEARNUMB' #> Var 10:  '1a. Skin_Desc' was renamed to 'SKNDSC1A' #>  #> All renamed variables passed validation. #>  #>   V1 STUDYID STUDYID2 SUBJECTD ENT1C EYES1B LUNGS1D HEART1E YEARNUMB SKNDSC1A #> 1  0       0        0        0     0      0       0       0        0        0 #> 2  0       0        0        0     0      0       0       0        0        0 #> 3  0       0        0        0     0      0       0       0        0        0 tidy_varnames(adxx, relo_2_end = FALSE) # prefix numbers on left-hand side #>  #> The following variable name validation checks failed: #> * Must be 8 characters or less: Variables `subject id`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Must start with a letter: Variables `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, and `1a. Skin_Desc`. #> * Cannot contain any non-ASCII, symbol or underscore characters: Variables `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Cannot contain any lowercase characters Variables ``, `studyid`, `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #>  #> ── 9 of 10 (90%) variables were renamed ── #>  #> Var 1:  '' was renamed to 'V1' #> Var 3:  'studyid' was renamed to 'STUDYID2' #> Var 4:  'subject id' was renamed to 'SUBJECTD' #> Var 5:  '1c. ENT' was renamed to 'X1CENT' #> Var 6:  '1b. Eyes' was renamed to 'X1BEYES' #> Var 7:  '1d. Lungs' was renamed to 'X1DLUNGS' #> Var 8:  '1e. Heart' was renamed to 'X1EHEART' #> Var 9:  'year number' was renamed to 'YEARNUMB' #> Var 10:  '1a. Skin_Desc' was renamed to 'X1SKNDSC' #>  #> All renamed variables passed validation. #>  #>   V1 STUDYID STUDYID2 SUBJECTD X1CENT X1BEYES X1DLUNGS X1EHEART YEARNUMB #> 1  0       0        0        0      0       0        0        0        0 #> 2  0       0        0        0      0       0        0        0        0 #> 3  0       0        0        0      0       0        0        0        0 #>   X1SKNDSC #> 1        0 #> 2        0 #> 3        0 tidy_varnames(adxx, dict_dat  = my_dictionary) # 'SUBJID' used #>  #> The following variable name validation checks failed: #> * Must be 8 characters or less: Variables `subject id`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Must start with a letter: Variables `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, and `1a. Skin_Desc`. #> * Cannot contain any non-ASCII, symbol or underscore characters: Variables `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Cannot contain any lowercase characters Variables ``, `studyid`, `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #>  #> ── 9 of 10 (90%) variables were renamed ── #>  #> Var 1:  '' was renamed to 'V1' #> Var 3:  'studyid' was renamed to 'STUDYID2' #> Var 4:  'subject id' was renamed to 'SUBJID' #> Var 5:  '1c. ENT' was renamed to 'ENT1C' #> Var 6:  '1b. Eyes' was renamed to 'EYES1B' #> Var 7:  '1d. Lungs' was renamed to 'LUNGS1D' #> Var 8:  '1e. Heart' was renamed to 'HEART1E' #> Var 9:  'year number' was renamed to 'YEARNUMB' #> Var 10:  '1a. Skin_Desc' was renamed to 'SKNDSC1A' #>  #> All renamed variables passed validation. #>  #>   V1 STUDYID STUDYID2 SUBJID ENT1C EYES1B LUNGS1D HEART1E YEARNUMB SKNDSC1A #> 1  0       0        0      0     0      0       0       0        0        0 #> 2  0       0        0      0     0      0       0       0        0        0 #> 3  0       0        0      0     0      0       0       0        0        0 tidy_varnames(adxx, sep = \"_\") # permissible for legacy studies #>  #> The following variable name validation checks failed: #> * Must be 8 characters or less: Variables `subject id`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Must start with a letter: Variables `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, and `1a. Skin_Desc`. #> * Cannot contain any non-ASCII, symbol or underscore characters: Variables `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #> * Cannot contain any lowercase characters Variables ``, `studyid`, `subject id`, `1c. ENT`, `1b. Eyes`, `1d. Lungs`, `1e. Heart`, `year number`, and `1a. Skin_Desc`. #>  #> ── 9 of 10 (90%) variables were renamed ── #>  #> Var 1:  '' was renamed to 'V1' #> Var 3:  'studyid' was renamed to 'STUDYID2' #> Var 4:  'subject id' was renamed to 'SUBJCTID' #> Var 5:  '1c. ENT' was renamed to 'ENT_1C' #> Var 6:  '1b. Eyes' was renamed to 'EYES_1B' #> Var 7:  '1d. Lungs' was renamed to 'LUNGS_1D' #> Var 8:  '1e. Heart' was renamed to 'HEART_1E' #> Var 9:  'year number' was renamed to 'YEARNMBR' #> Var 10:  '1a. Skin_Desc' was renamed to 'SKNDSC1A' #>  #> The following variable name validation checks still failed: #> Cannot contain any non-ASCII, symbol or underscore characters: Variables `ENT_1C`, `EYES_1B`, `LUNGS_1D`, and `HEART_1E`. #> Cannot contain any lowercase characters Variables `ENT_1C`, `EYES_1B`, `LUNGS_1D`, and `HEART_1E`. #>   V1 STUDYID STUDYID2 SUBJCTID ENT_1C EYES_1B LUNGS_1D HEART_1E YEARNMBR #> 1  0       0        0        0      0       0        0        0        0 #> 2  0       0        0        0      0       0        0        0        0 #> 3  0       0        0        0      0       0        0        0        0 #>   SKNDSC1A #> 1        0 #> 2        0 #> 3        0"},{"path":"/news/index.html","id":"tidyrename-development-version","dir":"Changelog","previous_headings":"","what":"tidyRename (development version)","title":"tidyRename (development version)","text":"Initial CRAN submission.","code":""}]
